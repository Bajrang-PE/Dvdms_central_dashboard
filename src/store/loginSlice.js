import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  showCmsLogin: false,
  showForgotPass: false,
  selectedOption: [],
  openPage: 'home',
  isShowReport: false,
  widgetData: [],
  zoneListData: [],
  facilityTypeListData: [],
  genericDrugListData: [],
  stateListData: [],
  groupListData: [],
  stateJobListData: [],
  hintQuestionDrpDt: [],
  stateNameDrpDt: [],
  supplierNameDrpDt: [],
  districtNameDrpDt: [],
  groupDrpData: [],
  subGroupDrpData: [],
  facilityTypeDrpDt: [],
  drugTypeDrpData: [],
  genericDrugDrpData: [],
  dateDrpDt: [],
  testTypeDrpData: [],
  hospNameDrpData: [],
  zoneDrpData: [],
  iphsGroupDrpData: [],
  iphsSubGroupDrpData: [],
  iphsMedicineDrpData: [],
  iphsDrugDrpData: [],
  confirmSave: false,
  showConfirmSave: false,
};

const loginSlice = createSlice({
  name: 'login',
  initialState,
  reducers: {
    setShowCmsLogin(state, action) { state.showCmsLogin = action.payload; },
    setShowForgotPass(state, action) { state.showForgotPass = action.payload; },
    setSelectedOption(state, action) { state.selectedOption = action.payload; },
    setOpenPage(state, action) { state.openPage = action.payload; },
    setIsShowReport(state, action) { state.isShowReport = action.payload; },
    setWidgetData(state, action) { state.widgetData = action.payload; },
    setZoneListData(state, action) { state.zoneListData = action.payload; },
    setFacilityTypeListData(state, action) { state.facilityTypeListData = action.payload; },
    setGenericDrugListData(state, action) { state.genericDrugListData = action.payload; },
    setStateListData(state, action) { state.stateListData = action.payload; },
    setGroupListData(state, action) { state.groupListData = action.payload; },
    setStateJobListData(state, action) { state.stateJobListData = action.payload; },
    setHintQuestionDrpDt(state, action) { state.hintQuestionDrpDt = action.payload; },
    setStateNameDrpDt(state, action) { state.stateNameDrpDt = action.payload; },
    setSupplierNameDrpDt(state, action) { state.supplierNameDrpDt = action.payload; },
    setDistrictNameDrpDt(state, action) { state.districtNameDrpDt = action.payload; },
    setGroupDrpData(state, action) { state.groupDrpData = action.payload; },
    setSubGroupDrpData(state, action) { state.subGroupDrpData = action.payload; },
    setFacilityTypeDrpDt(state, action) { state.facilityTypeDrpDt = action.payload; },
    setDrugTypeDrpData(state, action) { state.drugTypeDrpData = action.payload; },
    setGenericDrugDrpData(state, action) { state.genericDrugDrpData = action.payload; },
    setDateDrpDt(state, action) { state.dateDrpDt = action.payload; },
    setTestTypeDrpData(state, action) { state.testTypeDrpData = action.payload; },
    setHospNameDrpData(state, action) { state.hospNameDrpData = action.payload; },
    setZoneDrpData(state, action) { state.zoneDrpData = action.payload; },
    setIphsGroupDrpData(state, action) { state.iphsGroupDrpData = action.payload; },
    setIphsSubGroupDrpData(state, action) { state.iphsSubGroupDrpData = action.payload; },
    setIphsMedicineDrpData(state, action) { state.iphsMedicineDrpData = action.payload; },
    setIphsDrugDrpData(state, action) { state.iphsDrugDrpData = action.payload; },
    setConfirmSave(state, action) { state.confirmSave = action.payload; },
    setShowConfirmSave(state, action) { state.showConfirmSave = action.payload; },
    // Add more reducers as needed
  },
});

export const {
  setShowCmsLogin,
  setShowForgotPass,
  setSelectedOption,
  setOpenPage,
  setIsShowReport,
  setWidgetData,
  setZoneListData,
  setFacilityTypeListData,
  setGenericDrugListData,
  setStateListData,
  setGroupListData,
  setStateJobListData,
  setHintQuestionDrpDt,
  setStateNameDrpDt,
  setSupplierNameDrpDt,
  setDistrictNameDrpDt,
  setGroupDrpData,
  setSubGroupDrpData,
  setFacilityTypeDrpDt,
  setDrugTypeDrpData,
  setGenericDrugDrpData,
  setDateDrpDt,
  setTestTypeDrpData,
  setHospNameDrpData,
  setZoneDrpData,
  setIphsGroupDrpData,
  setIphsSubGroupDrpData,
  setIphsMedicineDrpData,
  setIphsDrugDrpData,
  setConfirmSave,
  setShowConfirmSave,
} = loginSlice.actions;

export default loginSlice.reducer;
